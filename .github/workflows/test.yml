name: Test
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Setup deps
        run: |
          sudo apt-get update && \
          sudo apt-get install -y gcc-arm-linux-gnueabihf \
            libc6-dev-armhf-cross \
            qemu-user
      - name: Enable experimental features for the Docker CLI
        run: |
          mkdir -p ~/.docker
          echo $'{\n  "experimental": "enabled"\n}' | sudo tee ~/.docker/config.json
          sudo service docker restart
          docker version -f '{{.Client.Experimental}}'
          docker buildx version
      - name: Setup a Docker builder
        run: |
          docker buildx create --name grpc --driver docker-container --use
          docker buildx inspect --bootstrap
      - uses: actions/checkout@v2
      # TODO: Caching doesn't seem to work :(
      # https://docs.github.com/en/free-pro-team@latest/actions/guides/caching-dependencies-to-speed-up-workflows
      - name: Cache Docker
        uses: actions/cache@v2
        env:
          cache-name: docker-cache
        with:
          path: /tmp/cache
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('src/*', 'Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
            ${{ runner.os }}-
      - name: Compile the binaries
        run: CACHE=/tmp/cache docker buildx bake
      # NOTE: Cannot run the binaries if there's different versions of glibc; for Debian Buster we need at least Ubuntu 20.04.
      # https://packages.ubuntu.com/bionic/libc6-dev-armhf-cross
      # https://packages.debian.org/buster/libc6-dev-armhf-cross
      - name: Verify the binaries
        run: |
          unset LD_LIBRARY_PATH

          qemu-arm -L /usr/arm-linux-gnueabihf/ ./bin/hello_server &
          sleep 1

          if ! qemu-arm -L /usr/arm-linux-gnueabihf/ ./bin/hello_client John \
            | grep -q "Hello, John!" ; then
            echo "Binary output is not ok"
            exit 1
          fi
